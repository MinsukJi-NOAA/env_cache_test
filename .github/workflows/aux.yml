name: Manage workflows

on:
  workflow_run:
    workflows: ["Test"]
    types:
      - requested

jobs:
  job1:
    name: Check PR branch currency
    runs-on: ubuntu-20.04

    outputs:
      currency: ${{ steps.prcheck.outputs.currency }}

    steps:
    - name: Check if PR is up to date
      id: prcheck
      run: |
        sleep 120
        echo "::set-output name=currency::pass"

  job2:
    name: Cancel job
    runs-on: ubuntu-20.04
    needs: job1

    steps:
    - name: checkout codes
      uses: actions/checkout@v2

    - name: print github event path
      run: cat ${GITHUB_EVENT_PATH}

    - name: print all actions runs
      run: |
        repo="${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/actions/runs"
        curl -sS -H "Accept: application/vnd.github.v3+json" ${repo}

    - name: Check if run-ci is requested
      run: |
        cd ${GITHUB_WORKSPACE}
        tr_id=$(cat ${GITHUB_EVENT_PATH} | jq -r '.workflow_run.id')
        echo "TRIGGER_ID=${tr_id}" >> $GITHUB_ENV
        tr_br=$(cat ${GITHUB_EVENT_PATH} | jq -r '.workflow_run.head_branch')
        echo "TRIGGER_BR=${tr_br}" >> $GITHUB_ENV
        message="$(cat ${GITHUB_EVENT_PATH} | jq '.workflow_run.head_commit.message')"
        echo $message
        cat ${GITHUB_EVENT_PATH} | jq '.workflow_run.head_commit.message' | grep run-ci >/dev/null 2>&1 && d=$? || d=$?
        if [[ $d -eq 0 ]]; then
          echo "run-ci is requested"
          echo "run-ci=yes" >> $GITHUB_ENV
        else
          echo "run-ci is not requested"
          echo "run-ci=no" >> $GITHUB_ENV
        fi

    - name: Cancel current job
      run: |
        repo="${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/actions/runs"
        if [[ ${{needs.job1.outputs.currency}} == "fail" || ${{env.run-ci}} == "no" ]]; then
          echo "Canceling the current job because PR branch is not up to date or run-ci is not requested"
          echo "CURR_JOB=cancelled" >> $GITHUB_ENV
          curl -sS -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3+json" ${repo}/$tr_id/cancel
        else
          echo "CURR_JOB=running" >> $GITHUB_ENV
        fi

    - name: Cancel redundant jobs
      run: |
        echo "CURR_JOB is $CURR_JOB"
        echo "TRIGGER_ID is $TRIGGER_ID"
        echo "TRIGGER_BR is $TRIGGER_BR"
        cd ${GITHUB_WORKSPACE}
        repo="${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/actions/runs"
        cancel_ids=$(curl -sS -H "Accept: application/vnd.github.v3+json" ${repo} | ./json_helper.py cancel_workflow)
        echo "cancel ids: $cancel_ids"
        if [[ $cancel_ids != '' ]]; then
          for i in $cancel_ids; do
            curl -sS -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3+json" ${repo}/$i/cancel
          done
        fi
      if: ${{ env.CURR_JOB == 'running' }}
